<%- app_path = "#{Setting.deployment.path}/#{Setting.deployment.app_name}/current" -%>
<%- unicorn_pid = "#{app_path}/tmp/pids/unicorn.pid" -%>
<%- delayed_job_pid = "#{app_path}/tmp/pids/delayed_job.pid" -%>
check system server
  if loadavg (1min) > 4 then alert
  if loadavg (5min) > 2 then alert
  if memory usage > 90% then alert
  if cpu usage (user) > 70% then alert
  if cpu usage (system) > 30% then alert
  if cpu usage (wait) > 20% then alert

check process nginx with pidfile /var/run/nginx.pid
  group nginx
  start program = "/etc/init.d/nginx start" as uid root
  stop program = "/etc/init.d/nginx restart" as uid root
  if children > 250 then restart
  if loadavg(5min) greater than 10 for 8 cycles then restart
  if 3 restarts within 5 cycles then timeout

check process mysql with pidfile /var/run/mysqld/mysqld.pid
  group mysql
  start program = "/etc/init.d/mysqld start" as uid root
  stop program = "/etc/init.d/mysqld restart" as uid root
  if failed host localhost port 3306 protocol mysql then restart
  if 5 restarts within 5 cycles then timeout

check process <%= Setting.deployment.app_name %>_unicorn with pidfile <%= unicorn_pid %>
  group <%= Setting.deployment.app_name %>_unicorn
  start program = "/etc/init.d/unicorn_<%= Setting.deployment.app_name %> start" as uid <%= Setting.deployment.deploy_user %>
  stop program = "/etc/init.d/unicorn_<%= Setting.deployment.app_name %> stop" as uid <%= Setting.deployment.deploy_user %>

<%- Setting.deployment.worker_processes.times do |n| -%>
  <%- pid = unicorn_pid.sub(".pid", "_worker_#{n}.pid") -%>
check process <%= Setting.deployment.app_name %>_unicorn_worker_<%= n %> with pidfile <%= pid %>
  group <%= Setting.deployment.app_name %>_unicorn_worker
  start program = "/bin/true"
  stop program = "/etc/init.d/unicorn_<%= Setting.deployment.app_name %> kill_worker <%= n %>" as uid root
  if mem > 100.0 MB for 1 cycles then restart
  if cpu > 50% for 3 cycles then restart
  # if 5 restarts within 5 cycles then timeout
  alert <%= Setting.admin_mail %> only on { pid }
  if changed pid 2 times within 60 cycles then alert
<%- end -%>

check process delayed_job with pidfile <%= delayed_job_pid %>
  group <%= Setting.deployment.app_name %>_delayed_job
  start program = "/etc/init.d/delayed_job_<%= Setting.deployment.app_name -%> start" as uid <%= Setting.deployment.deploy_user %>
  stop program = "/etc/init.d/delayed_job_<%= Setting.deployment.app_name -%> stop" as uid <%= Setting.deployment.deploy_user %>
